// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MyFirstCoprocessor.proto

package com.cloudera.hbase.coprocessor.server;

public final class MyFirstCoprocessor {
    private MyFirstCoprocessor() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }
    public interface MyCoprocessRequestOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required string family = 1;
        /**
         * <code>required string family = 1;</code>
         */
        boolean hasFamily();
        /**
         * <code>required string family = 1;</code>
         */
        String getFamily();
        /**
         * <code>required string family = 1;</code>
         */
        com.google.protobuf.ByteString
        getFamilyBytes();

        // required string columns = 2;
        /**
         * <code>required string columns = 2;</code>
         */
        boolean hasColumns();
        /**
         * <code>required string columns = 2;</code>
         */
        String getColumns();
        /**
         * <code>required string columns = 2;</code>
         */
        com.google.protobuf.ByteString
        getColumnsBytes();
    }
    /**
     * Protobuf type {@code MyCoprocessRequest}
     */
    public static final class MyCoprocessRequest extends
            com.google.protobuf.GeneratedMessage
            implements MyCoprocessRequestOrBuilder {
        // Use MyCoprocessRequest.newBuilder() to construct.
        private MyCoprocessRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private MyCoprocessRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MyCoprocessRequest defaultInstance;
        public static MyCoprocessRequest getDefaultInstance() {
            return defaultInstance;
        }

        public MyCoprocessRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private MyCoprocessRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            family_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            columns_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return MyFirstCoprocessor.internal_static_MyCoprocessRequest_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return MyFirstCoprocessor.internal_static_MyCoprocessRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            MyCoprocessRequest.class, Builder.class);
        }

        public static com.google.protobuf.Parser<MyCoprocessRequest> PARSER =
                new com.google.protobuf.AbstractParser<MyCoprocessRequest>() {
                    public MyCoprocessRequest parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new MyCoprocessRequest(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<MyCoprocessRequest> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required string family = 1;
        public static final int FAMILY_FIELD_NUMBER = 1;
        private Object family_;
        /**
         * <code>required string family = 1;</code>
         */
        public boolean hasFamily() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string family = 1;</code>
         */
        public String getFamily() {
            Object ref = family_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    family_ = s;
                }
                return s;
            }
        }
        /**
         * <code>required string family = 1;</code>
         */
        public com.google.protobuf.ByteString
        getFamilyBytes() {
            Object ref = family_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                family_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required string columns = 2;
        public static final int COLUMNS_FIELD_NUMBER = 2;
        private Object columns_;
        /**
         * <code>required string columns = 2;</code>
         */
        public boolean hasColumns() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string columns = 2;</code>
         */
        public String getColumns() {
            Object ref = columns_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    columns_ = s;
                }
                return s;
            }
        }
        /**
         * <code>required string columns = 2;</code>
         */
        public com.google.protobuf.ByteString
        getColumnsBytes() {
            Object ref = columns_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                columns_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            family_ = "";
            columns_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasFamily()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasColumns()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getFamilyBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getColumnsBytes());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getFamilyBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getColumnsBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MyCoprocessRequest)) {
                return super.equals(obj);
            }
            MyCoprocessRequest other = (MyCoprocessRequest) obj;

            boolean result = true;
            result = result && (hasFamily() == other.hasFamily());
            if (hasFamily()) {
                result = result && getFamily()
                        .equals(other.getFamily());
            }
            result = result && (hasColumns() == other.hasColumns());
            if (hasColumns()) {
                result = result && getColumns()
                        .equals(other.getColumns());
            }
            result = result &&
                    getUnknownFields().equals(other.getUnknownFields());
            return result;
        }

        private int memoizedHashCode = 0;
        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasFamily()) {
                hash = (37 * hash) + FAMILY_FIELD_NUMBER;
                hash = (53 * hash) + getFamily().hashCode();
            }
            if (hasColumns()) {
                hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
                hash = (53 * hash) + getColumns().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static MyCoprocessRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static MyCoprocessRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static MyCoprocessRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static MyCoprocessRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static MyCoprocessRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static MyCoprocessRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static MyCoprocessRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static MyCoprocessRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static MyCoprocessRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static MyCoprocessRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(MyCoprocessRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code MyCoprocessRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements MyCoprocessRequestOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return MyFirstCoprocessor.internal_static_MyCoprocessRequest_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return MyFirstCoprocessor.internal_static_MyCoprocessRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                MyCoprocessRequest.class, Builder.class);
            }

            // Construct using com.cloudera.hbase.coprocessor.server.MyFirstCoprocessor.MyCoprocessRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                family_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                columns_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return MyFirstCoprocessor.internal_static_MyCoprocessRequest_descriptor;
            }

            public MyCoprocessRequest getDefaultInstanceForType() {
                return MyCoprocessRequest.getDefaultInstance();
            }

            public MyCoprocessRequest build() {
                MyCoprocessRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public MyCoprocessRequest buildPartial() {
                MyCoprocessRequest result = new MyCoprocessRequest(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.family_ = family_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.columns_ = columns_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MyCoprocessRequest) {
                    return mergeFrom((MyCoprocessRequest)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(MyCoprocessRequest other) {
                if (other == MyCoprocessRequest.getDefaultInstance()) return this;
                if (other.hasFamily()) {
                    bitField0_ |= 0x00000001;
                    family_ = other.family_;
                    onChanged();
                }
                if (other.hasColumns()) {
                    bitField0_ |= 0x00000002;
                    columns_ = other.columns_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasFamily()) {

                    return false;
                }
                if (!hasColumns()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                MyCoprocessRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MyCoprocessRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required string family = 1;
            private Object family_ = "";
            /**
             * <code>required string family = 1;</code>
             */
            public boolean hasFamily() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required string family = 1;</code>
             */
            public String getFamily() {
                Object ref = family_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    family_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>required string family = 1;</code>
             */
            public com.google.protobuf.ByteString
            getFamilyBytes() {
                Object ref = family_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    family_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>required string family = 1;</code>
             */
            public Builder setFamily(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                family_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required string family = 1;</code>
             */
            public Builder clearFamily() {
                bitField0_ = (bitField0_ & ~0x00000001);
                family_ = getDefaultInstance().getFamily();
                onChanged();
                return this;
            }
            /**
             * <code>required string family = 1;</code>
             */
            public Builder setFamilyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                family_ = value;
                onChanged();
                return this;
            }

            // required string columns = 2;
            private Object columns_ = "";
            /**
             * <code>required string columns = 2;</code>
             */
            public boolean hasColumns() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required string columns = 2;</code>
             */
            public String getColumns() {
                Object ref = columns_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    columns_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>required string columns = 2;</code>
             */
            public com.google.protobuf.ByteString
            getColumnsBytes() {
                Object ref = columns_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    columns_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>required string columns = 2;</code>
             */
            public Builder setColumns(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                columns_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required string columns = 2;</code>
             */
            public Builder clearColumns() {
                bitField0_ = (bitField0_ & ~0x00000002);
                columns_ = getDefaultInstance().getColumns();
                onChanged();
                return this;
            }
            /**
             * <code>required string columns = 2;</code>
             */
            public Builder setColumnsBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                columns_ = value;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:MyCoprocessRequest)
        }

        static {
            defaultInstance = new MyCoprocessRequest(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:MyCoprocessRequest)
    }

    public interface MyCoprocessResponseOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required int64 count = 1;
        /**
         * <code>required int64 count = 1;</code>
         */
        boolean hasCount();
        /**
         * <code>required int64 count = 1;</code>
         */
        long getCount();

        // required double maxnum = 3;
        /**
         * <code>required double maxnum = 3;</code>
         */
        boolean hasMaxnum();
        /**
         * <code>required double maxnum = 3;</code>
         */
        double getMaxnum();

        // required double minnum = 4;
        /**
         * <code>required double minnum = 4;</code>
         */
        boolean hasMinnum();
        /**
         * <code>required double minnum = 4;</code>
         */
        double getMinnum();

        // required double sumnum = 5;
        /**
         * <code>required double sumnum = 5;</code>
         */
        boolean hasSumnum();
        /**
         * <code>required double sumnum = 5;</code>
         */
        double getSumnum();
    }
    /**
     * Protobuf type {@code MyCoprocessResponse}
     */
    public static final class MyCoprocessResponse extends
            com.google.protobuf.GeneratedMessage
            implements MyCoprocessResponseOrBuilder {
        // Use MyCoprocessResponse.newBuilder() to construct.
        private MyCoprocessResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private MyCoprocessResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MyCoprocessResponse defaultInstance;
        public static MyCoprocessResponse getDefaultInstance() {
            return defaultInstance;
        }

        public MyCoprocessResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private MyCoprocessResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            count_ = input.readInt64();
                            break;
                        }
                        case 25: {
                            bitField0_ |= 0x00000002;
                            maxnum_ = input.readDouble();
                            break;
                        }
                        case 33: {
                            bitField0_ |= 0x00000004;
                            minnum_ = input.readDouble();
                            break;
                        }
                        case 41: {
                            bitField0_ |= 0x00000008;
                            sumnum_ = input.readDouble();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return MyFirstCoprocessor.internal_static_MyCoprocessResponse_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return MyFirstCoprocessor.internal_static_MyCoprocessResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            MyCoprocessResponse.class, Builder.class);
        }

        public static com.google.protobuf.Parser<MyCoprocessResponse> PARSER =
                new com.google.protobuf.AbstractParser<MyCoprocessResponse>() {
                    public MyCoprocessResponse parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new MyCoprocessResponse(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<MyCoprocessResponse> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required int64 count = 1;
        public static final int COUNT_FIELD_NUMBER = 1;
        private long count_;
        /**
         * <code>required int64 count = 1;</code>
         */
        public boolean hasCount() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int64 count = 1;</code>
         */
        public long getCount() {
            return count_;
        }

        // required double maxnum = 3;
        public static final int MAXNUM_FIELD_NUMBER = 3;
        private double maxnum_;
        /**
         * <code>required double maxnum = 3;</code>
         */
        public boolean hasMaxnum() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double maxnum = 3;</code>
         */
        public double getMaxnum() {
            return maxnum_;
        }

        // required double minnum = 4;
        public static final int MINNUM_FIELD_NUMBER = 4;
        private double minnum_;
        /**
         * <code>required double minnum = 4;</code>
         */
        public boolean hasMinnum() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required double minnum = 4;</code>
         */
        public double getMinnum() {
            return minnum_;
        }

        // required double sumnum = 5;
        public static final int SUMNUM_FIELD_NUMBER = 5;
        private double sumnum_;
        /**
         * <code>required double sumnum = 5;</code>
         */
        public boolean hasSumnum() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required double sumnum = 5;</code>
         */
        public double getSumnum() {
            return sumnum_;
        }

        private void initFields() {
            count_ = 0L;
            maxnum_ = 0D;
            minnum_ = 0D;
            sumnum_ = 0D;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasCount()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxnum()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMinnum()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSumnum()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, count_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeDouble(3, maxnum_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeDouble(4, minnum_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeDouble(5, sumnum_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, count_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(3, maxnum_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(4, minnum_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(5, sumnum_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MyCoprocessResponse)) {
                return super.equals(obj);
            }
            MyCoprocessResponse other = (MyCoprocessResponse) obj;

            boolean result = true;
            result = result && (hasCount() == other.hasCount());
            if (hasCount()) {
                result = result && (getCount()
                        == other.getCount());
            }
            result = result && (hasMaxnum() == other.hasMaxnum());
            if (hasMaxnum()) {
                result = result && (Double.doubleToLongBits(getMaxnum())    == Double.doubleToLongBits(other.getMaxnum()));
            }
            result = result && (hasMinnum() == other.hasMinnum());
            if (hasMinnum()) {
                result = result && (Double.doubleToLongBits(getMinnum())    == Double.doubleToLongBits(other.getMinnum()));
            }
            result = result && (hasSumnum() == other.hasSumnum());
            if (hasSumnum()) {
                result = result && (Double.doubleToLongBits(getSumnum())    == Double.doubleToLongBits(other.getSumnum()));
            }
            result = result &&
                    getUnknownFields().equals(other.getUnknownFields());
            return result;
        }

        private int memoizedHashCode = 0;
        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasCount()) {
                hash = (37 * hash) + COUNT_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(getCount());
            }
            if (hasMaxnum()) {
                hash = (37 * hash) + MAXNUM_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(
                        Double.doubleToLongBits(getMaxnum()));
            }
            if (hasMinnum()) {
                hash = (37 * hash) + MINNUM_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(
                        Double.doubleToLongBits(getMinnum()));
            }
            if (hasSumnum()) {
                hash = (37 * hash) + SUMNUM_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(
                        Double.doubleToLongBits(getSumnum()));
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static MyCoprocessResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static MyCoprocessResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static MyCoprocessResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static MyCoprocessResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static MyCoprocessResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static MyCoprocessResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static MyCoprocessResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static MyCoprocessResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static MyCoprocessResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static MyCoprocessResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(MyCoprocessResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code MyCoprocessResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements MyCoprocessResponseOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return MyFirstCoprocessor.internal_static_MyCoprocessResponse_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return MyFirstCoprocessor.internal_static_MyCoprocessResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                MyCoprocessResponse.class, Builder.class);
            }

            // Construct using com.cloudera.hbase.coprocessor.server.MyFirstCoprocessor.MyCoprocessResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                count_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                maxnum_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000002);
                minnum_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000004);
                sumnum_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return MyFirstCoprocessor.internal_static_MyCoprocessResponse_descriptor;
            }

            public MyCoprocessResponse getDefaultInstanceForType() {
                return MyCoprocessResponse.getDefaultInstance();
            }

            public MyCoprocessResponse build() {
                MyCoprocessResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public MyCoprocessResponse buildPartial() {
                MyCoprocessResponse result = new MyCoprocessResponse(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.count_ = count_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.maxnum_ = maxnum_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.minnum_ = minnum_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.sumnum_ = sumnum_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MyCoprocessResponse) {
                    return mergeFrom((MyCoprocessResponse)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(MyCoprocessResponse other) {
                if (other == MyCoprocessResponse.getDefaultInstance()) return this;
                if (other.hasCount()) {
                    setCount(other.getCount());
                }
                if (other.hasMaxnum()) {
                    setMaxnum(other.getMaxnum());
                }
                if (other.hasMinnum()) {
                    setMinnum(other.getMinnum());
                }
                if (other.hasSumnum()) {
                    setSumnum(other.getSumnum());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasCount()) {

                    return false;
                }
                if (!hasMaxnum()) {

                    return false;
                }
                if (!hasMinnum()) {

                    return false;
                }
                if (!hasSumnum()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                MyCoprocessResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MyCoprocessResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required int64 count = 1;
            private long count_ ;
            /**
             * <code>required int64 count = 1;</code>
             */
            public boolean hasCount() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required int64 count = 1;</code>
             */
            public long getCount() {
                return count_;
            }
            /**
             * <code>required int64 count = 1;</code>
             */
            public Builder setCount(long value) {
                bitField0_ |= 0x00000001;
                count_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required int64 count = 1;</code>
             */
            public Builder clearCount() {
                bitField0_ = (bitField0_ & ~0x00000001);
                count_ = 0L;
                onChanged();
                return this;
            }

            // required double maxnum = 3;
            private double maxnum_ ;
            /**
             * <code>required double maxnum = 3;</code>
             */
            public boolean hasMaxnum() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required double maxnum = 3;</code>
             */
            public double getMaxnum() {
                return maxnum_;
            }
            /**
             * <code>required double maxnum = 3;</code>
             */
            public Builder setMaxnum(double value) {
                bitField0_ |= 0x00000002;
                maxnum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required double maxnum = 3;</code>
             */
            public Builder clearMaxnum() {
                bitField0_ = (bitField0_ & ~0x00000002);
                maxnum_ = 0D;
                onChanged();
                return this;
            }

            // required double minnum = 4;
            private double minnum_ ;
            /**
             * <code>required double minnum = 4;</code>
             */
            public boolean hasMinnum() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required double minnum = 4;</code>
             */
            public double getMinnum() {
                return minnum_;
            }
            /**
             * <code>required double minnum = 4;</code>
             */
            public Builder setMinnum(double value) {
                bitField0_ |= 0x00000004;
                minnum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required double minnum = 4;</code>
             */
            public Builder clearMinnum() {
                bitField0_ = (bitField0_ & ~0x00000004);
                minnum_ = 0D;
                onChanged();
                return this;
            }

            // required double sumnum = 5;
            private double sumnum_ ;
            /**
             * <code>required double sumnum = 5;</code>
             */
            public boolean hasSumnum() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>required double sumnum = 5;</code>
             */
            public double getSumnum() {
                return sumnum_;
            }
            /**
             * <code>required double sumnum = 5;</code>
             */
            public Builder setSumnum(double value) {
                bitField0_ |= 0x00000008;
                sumnum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required double sumnum = 5;</code>
             */
            public Builder clearSumnum() {
                bitField0_ = (bitField0_ & ~0x00000008);
                sumnum_ = 0D;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:MyCoprocessResponse)
        }

        static {
            defaultInstance = new MyCoprocessResponse(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:MyCoprocessResponse)
    }

    /**
     * Protobuf service {@code AggregationService}
     */
    public static abstract class AggregationService
            implements com.google.protobuf.Service {
        protected AggregationService() {}

        public interface Interface {
            /**
             * <code>rpc getAggregation(.MyCoprocessRequest) returns (.MyCoprocessResponse);</code>
             */
            public abstract void getAggregation(
                    com.google.protobuf.RpcController controller,
                    MyCoprocessRequest request,
                    com.google.protobuf.RpcCallback<MyCoprocessResponse> done);

        }

        public static com.google.protobuf.Service newReflectiveService(
                final Interface impl) {
            return new AggregationService() {
                @Override
                public  void getAggregation(
                        com.google.protobuf.RpcController controller,
                        MyCoprocessRequest request,
                        com.google.protobuf.RpcCallback<MyCoprocessResponse> done) {
                    impl.getAggregation(controller, request, done);
                }

            };
        }

        public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
            return new com.google.protobuf.BlockingService() {
                public final com.google.protobuf.Descriptors.ServiceDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }

                public final com.google.protobuf.Message callBlockingMethod(
                        com.google.protobuf.Descriptors.MethodDescriptor method,
                        com.google.protobuf.RpcController controller,
                        com.google.protobuf.Message request)
                        throws com.google.protobuf.ServiceException {
                    if (method.getService() != getDescriptor()) {
                        throw new IllegalArgumentException(
                                "Service.callBlockingMethod() given method descriptor for " +
                                        "wrong service type.");
                    }
                    switch(method.getIndex()) {
                        case 0:
                            return impl.getAggregation(controller, (MyCoprocessRequest)request);
                        default:
                            throw new AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getRequestPrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new IllegalArgumentException(
                                "Service.getRequestPrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch(method.getIndex()) {
                        case 0:
                            return MyCoprocessRequest.getDefaultInstance();
                        default:
                            throw new AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getResponsePrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new IllegalArgumentException(
                                "Service.getResponsePrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch(method.getIndex()) {
                        case 0:
                            return MyCoprocessResponse.getDefaultInstance();
                        default:
                            throw new AssertionError("Can't get here.");
                    }
                }

            };
        }

        /**
         * <code>rpc getAggregation(.MyCoprocessRequest) returns (.MyCoprocessResponse);</code>
         */
        public abstract void getAggregation(
                com.google.protobuf.RpcController controller,
                MyCoprocessRequest request,
                com.google.protobuf.RpcCallback<MyCoprocessResponse> done);

        public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
            return MyFirstCoprocessor.getDescriptor().getServices().get(0);
        }
        public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public final void callMethod(
                com.google.protobuf.Descriptors.MethodDescriptor method,
                com.google.protobuf.RpcController controller,
                com.google.protobuf.Message request,
                com.google.protobuf.RpcCallback<
                        com.google.protobuf.Message> done) {
            if (method.getService() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "Service.callMethod() given method descriptor for wrong " +
                                "service type.");
            }
            switch(method.getIndex()) {
                case 0:
                    this.getAggregation(controller, (MyCoprocessRequest)request,
                            com.google.protobuf.RpcUtil.<MyCoprocessResponse>specializeCallback(
                                    done));
                    return;
                default:
                    throw new AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getRequestPrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "Service.getRequestPrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch(method.getIndex()) {
                case 0:
                    return MyCoprocessRequest.getDefaultInstance();
                default:
                    throw new AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getResponsePrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "Service.getResponsePrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch(method.getIndex()) {
                case 0:
                    return MyCoprocessResponse.getDefaultInstance();
                default:
                    throw new AssertionError("Can't get here.");
            }
        }

        public static Stub newStub(
                com.google.protobuf.RpcChannel channel) {
            return new Stub(channel);
        }

        public static final class Stub extends AggregationService implements Interface {
            private Stub(com.google.protobuf.RpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.RpcChannel channel;

            public com.google.protobuf.RpcChannel getChannel() {
                return channel;
            }

            public  void getAggregation(
                    com.google.protobuf.RpcController controller,
                    MyCoprocessRequest request,
                    com.google.protobuf.RpcCallback<MyCoprocessResponse> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        MyCoprocessResponse.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                MyCoprocessResponse.class,
                                MyCoprocessResponse.getDefaultInstance()));
            }
        }

        public static BlockingInterface newBlockingStub(
                com.google.protobuf.BlockingRpcChannel channel) {
            return new BlockingStub(channel);
        }

        public interface BlockingInterface {
            public MyCoprocessResponse getAggregation(
                    com.google.protobuf.RpcController controller,
                    MyCoprocessRequest request)
                    throws com.google.protobuf.ServiceException;
        }

        private static final class BlockingStub implements BlockingInterface {
            private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.BlockingRpcChannel channel;

            public MyCoprocessResponse getAggregation(
                    com.google.protobuf.RpcController controller,
                    MyCoprocessRequest request)
                    throws com.google.protobuf.ServiceException {
                return (MyCoprocessResponse) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        MyCoprocessResponse.getDefaultInstance());
            }

        }

        // @@protoc_insertion_point(class_scope:AggregationService)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_MyCoprocessRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_MyCoprocessRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_MyCoprocessResponse_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_MyCoprocessResponse_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        String[] descriptorData = {
                "\n\030MyFirstCoprocessor.proto\"5\n\022MyCoproces" +
                        "sRequest\022\016\n\006family\030\001 \002(\t\022\017\n\007columns\030\002 \002(" +
                        "\t\"T\n\023MyCoprocessResponse\022\r\n\005count\030\001 \002(\003\022" +
                        "\016\n\006maxnum\030\003 \002(\001\022\016\n\006minnum\030\004 \002(\001\022\016\n\006sumnu" +
                        "m\030\005 \002(\0012Q\n\022AggregationService\022;\n\016getAggr" +
                        "egation\022\023.MyCoprocessRequest\032\024.MyCoproce" +
                        "ssResponseBC\n%com.cloudera.hbase.coproce" +
                        "ssor.serverB\022MyFirstCoprocessorH\001\210\001\001\240\001\001"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_MyCoprocessRequest_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_MyCoprocessRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_MyCoprocessRequest_descriptor,
                                new String[] { "Family", "Columns", });
                        internal_static_MyCoprocessResponse_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_MyCoprocessResponse_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_MyCoprocessResponse_descriptor,
                                new String[] { "Count", "Maxnum", "Minnum", "Sumnum", });
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}